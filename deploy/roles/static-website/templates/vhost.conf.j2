<VirtualHost *:443>
  ServerName {{ domain }}

  {% if domain_aliases is defined %}
  {% for alias in domain_aliases %}
  ServerAlias {{ alias }}
  {% endfor %}
  {% endif %}

  DocumentRoot {{ document_root }}

  <Directory {{ document_root }}>
    Require all granted
    AllowOverride all
  </Directory>

  SSLEngine on

  SSLCertificateFile /etc/letsencrypt/live/{{ domain }}/cert.pem
  SSLCertificateKeyFile /etc/letsencrypt/live/{{ domain }}/privkey.pem
  SSLCertificateChainFile /etc/letsencrypt/live/{{ domain }}/chain.pem

  SSLVerifyClient None

  Alias /.well-known/acme-challenge/ /var/www/html/.well-known/acme-challenge/
  <Directory "/var/www/html/.well-known/acme-challenge/">
      Options None
      AllowOverride None
      ForceType text/plain
      RedirectMatch 404 "^(?!/\.well-known/acme-challenge/[\w-]{43}$)"
  </Directory>

  ErrorLog ${APACHE_LOG_DIR}/{{ domain }}-error.log
  CustomLog ${APACHE_LOG_DIR}/{{ domain }}-access.log combined
  AddEncoding gzip .gz

  # Use precompliled gzip CSS and JS files if supported by browser
  <LocationMatch "^/assets/.*\.(css|js)$">
    RewriteEngine on
    RewriteCond %{HTTP:Accept-Encoding} \b(x-)?gzip\b
    RewriteCond %{REQUEST_FILENAME}.gz -s
    RewriteRule ^(.+)$ $1.gz
  </LocationMatch>

  # for {.css.gz, .js.gz} turn off mod_deflate (on-the-fly) compression
  # and set correct headers to indicate encoding
  <LocationMatch "^/assets/.*\.css\.gz$">
      SetEnv no-gzip 1
      ForceType text/css
      Header set Content-Encoding gzip
      Header add Vary Accept-Encoding
  </LocationMatch>

  <LocationMatch "^/assets/.*\.js\.gz$">
      SetEnv no-gzip 1
      ForceType application/javascript
      Header set Content-Encoding gzip
      Header add Vary Accept-Encoding
  </LocationMatch>
</VirtualHost>

  # Redirect HTTP to HTTPS
<VirtualHost *:80>
  ServerName {{ domain }}
  # RewriteRule  ^.well-known/  -  [L]
  RedirectMatch permanent ^(.*)$ https://{{ domain }}$1
</VirtualHost>
